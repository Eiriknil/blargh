package blargh.rpg;

import static blargh.rpg.Characteristics.AG;
import static blargh.rpg.Characteristics.BS;
import static blargh.rpg.Characteristics.DEX;
import static blargh.rpg.Characteristics.FEL;
import static blargh.rpg.Characteristics.I;
import static blargh.rpg.Characteristics.INT;
import static blargh.rpg.Characteristics.S;
import static blargh.rpg.Characteristics.T;
import static blargh.rpg.Characteristics.WP;
import static blargh.rpg.Characteristics.WS;

import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;

public enum Skills {
	ART_WRITING(DEX), ART_CALLIGRAPHY(DEX), ATHLETICS(AG), BRIBERY(FEL), CHARM(FEL), CHARM_ANIMAL(WP), 
	CLIMB(S), COOL(WP), CONSUME_ALCOHOL(T), DODGE(AG), DRIVE(AG), 
	ENDURANCE(T), ENTERTAIN_SPEECHES(FEL), ENTERTAIN_STORYTELLING(FEL), ENTERTAIN_LECTURE(FEL), ENTERTAIN_RHETORIC(FEL), GAMBLE(INT), GOSSIP(FEL), HAGGLE(FEL), 
	INTIMIDATE(S), INTUITION(I), LEADERSHIP(FEL), MELEE_BASIC(WS), MELEE_POLEARM(WS), MELEE_BRAWLING(WS), MELEE_ANY(WS), NAVIGATION(I), 
	OUTDOOR_SURVIVAL(INT), PERCEPTION(I), RIDE_HORSE(AG), ROW(S), STEALTH_URBAN(AG), STEALTH_RURAL(AG), STEALTH_UNDERGROUND(AG),
	ANIMAL_CARE(INT), ANIMAL_TRAINING(INT), CHANNELLING_ANY_COLOUR(WP), EVALUATE(INT), 
	HEAL(INT), LANGUAGE_CLASSICAL(INT), LANGUAGE_GUILDER(INT), LANGUAGE_KHAZALID(INT), LANGUAGE_MAGICK(INT), LANGUAGE_BATTLE(INT), LANGUAGE_ANY(INT), LORE_EMPIRE(INT), LORE_CHEMISTRY(INT), 
	LORE_MEDICINE(INT), LORE_PLANTS(INT), LORE_SCIENCE(INT), LORE_ENGINEER(INT), LORE_LAW(INT), LORE_THEOLOGY(INT), LORE_ANY(INT), LORE_LOCAL(INT), 
	LORE_POLITICS(INT), LORE_ANATOMY(INT), LORE_HERALDRY(INT), LORE_MAGIC(INT), LORE_WARFARE(INT), 
	PERFORM(AG), PICK_LOCK(DEX), 
	PLAY(DEX), PRAY(FEL), RANGED_BLACKPOWDER(BS), RANGED_CROSSBOW(BS), RANGED_ENGINEERING(BS), RESEARCH(INT), SAIL(AG), 
	SECRET_SIGNS_GUILDER(INT), SET_TRAP(DEX), SLEIGHT_OF_HAND(DEX), SWIM(S), 
	TRACK(I), TRADE_APOTHECARY(DEX), TRADE_ENGINEER(DEX), TRADE_PRINTING(DEX), TRADE_POISONER(DEX), TRADE_BREWER(DEX), TRADE_HERBALIST(DEX), TRADE_VINTNER(DEX), TRADE_BARBER(DEX),
	TRADE_ANY(DEX);

	private Characteristics characteristic;
	private Skills() {}
	private Skills(Characteristics characteristic) {
		this.characteristic = characteristic;
	}

	public Characteristics characteristics() {
		return characteristic;
	}

	public static Set<Skills> basicSkills(){
		return new HashSet<>(Arrays.asList(ART_WRITING, ART_CALLIGRAPHY, ATHLETICS, BRIBERY, CHARM, CHARM_ANIMAL, CLIMB, COOL,
				CONSUME_ALCOHOL, DODGE, DRIVE, ENDURANCE, ENTERTAIN_SPEECHES, ENTERTAIN_STORYTELLING, ENTERTAIN_LECTURE, ENTERTAIN_RHETORIC, GAMBLE,
				GOSSIP, HAGGLE, INTIMIDATE, INTUITION, LEADERSHIP, 
				MELEE_BASIC, MELEE_POLEARM, MELEE_BRAWLING, MELEE_ANY,
				NAVIGATION, OUTDOOR_SURVIVAL, PERCEPTION, 
				RIDE_HORSE, 
				ROW, STEALTH_URBAN, STEALTH_RURAL, STEALTH_UNDERGROUND));
	}
	
	public static Set<Skills> advancedSkills(){
		return new HashSet<>(Arrays.asList(ANIMAL_CARE, ANIMAL_TRAINING, CHANNELLING_ANY_COLOUR, EVALUATE, HEAL, 
				LANGUAGE_CLASSICAL, LANGUAGE_GUILDER, LANGUAGE_KHAZALID, LANGUAGE_MAGICK, LANGUAGE_BATTLE, LANGUAGE_ANY, 
				LORE_EMPIRE, LORE_CHEMISTRY, LORE_ENGINEER, LORE_MEDICINE, LORE_PLANTS, LORE_SCIENCE, LORE_LAW, LORE_THEOLOGY, LORE_ANY, LORE_LOCAL, 
				LORE_POLITICS, LORE_WARFARE, 
				LORE_ANATOMY, PERFORM, PICK_LOCK, LORE_HERALDRY, LORE_MAGIC, 
				PLAY, 
				PRAY, 
				RANGED_CROSSBOW, RANGED_BLACKPOWDER, RANGED_ENGINEERING, 
				RESEARCH, SAIL, 
				SECRET_SIGNS_GUILDER, 
				SET_TRAP, SLEIGHT_OF_HAND, SWIM, TRACK, 
				TRADE_APOTHECARY, TRADE_ENGINEER, TRADE_POISONER, TRADE_BREWER, TRADE_HERBALIST, TRADE_VINTNER, TRADE_PRINTING, TRADE_ANY));
	}
}
