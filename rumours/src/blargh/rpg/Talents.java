package blargh.rpg;

import static blargh.rpg.Characteristics.DEX;
import static blargh.rpg.Characteristics.FEL;
import static blargh.rpg.Characteristics.I;
import static blargh.rpg.Characteristics.INT;
import static blargh.rpg.Characteristics.NONE;
import static blargh.rpg.Characteristics.S;
import static blargh.rpg.Characteristics.T;
import static blargh.rpg.Characteristics.WP;

public enum Talents {
	ACCURATE_SHOT, ACUTE_SENSE_TASTE, AETHYRIC_ATTUNEMENT, ALLEY_CAT, AMBIDEXTROUS, ANIMAL_AFFINITY, ARCANE_MAGIC_LORE, ARGUMENTATIVE, ARTISTIC, ATTRACTIVE,
	AVERAGE_SIZE, BATTLE_RAGE, BEAT_BLADE, BENEATH_NOTICE, BERSERK_CHARGE, BLATHER, BLESS_ANY, BOOKISH, BREAK_AND_ENTER, BRIBER, CARDSHARP, CAREFUL_STRIKE,
	CAROUSER, CATFALL, CAT_TONGUED, CHAOS_MAGIC_LORE, COMBAT_AWARE, COMBAT_MASTER, COMBAT_REFLEXES, COMMANDING_PRESENCE, CONCOCT, CONTORTIONIST, 
	COOLHEADED, CRACK_THE_WHIP, CRAFTSMAN_APOTHECARY, CRAFTSMAN_ENGINEER, CRIMINAL, DEADEYE_SHOT, DEALMAKER, DETECT_ARTEFACT, DICEMAN, DIRTY_FIGHTING, 
	DISARM, DISTRACT, DOOMED, 
	DRILLED, DUAL_WIELDER, EMBEZZLE, ENCLOSED_FIGHTER, ETIQUETTE_GUILDER, ETIQUETTE_CULTISTS, ETIQUETTE_SOLDIERS, ETIQUETTE_SCHOLAR, FAST_HANDS, FAST_SHOT, 
	FEARLESS_OUTLAWS, FEINT, FIELD_DRESSING, FISHERMAN, 
	FLAGELLANT, FLEE, FLEET_FOOTED, FRENZY, FRIGHTENING, FURIOUS_ASSAULT, GREGARIOUS, GUNNER, HARDY, HATRED_ANY, HOLY_HATRED, HOLY_VISIONS, HUNTERS_EYE, 
	IMPASSIONED_ZEAL, IMPLACABLE, IN_FIGHTER, INSPIRING, INSTINCTIVE_DICTION, INVOKE_ANY, IRON_JAW, IRON_WILL, JUMP_UP, KINGPIN, LIGHTNING_REFLEXES, 
	LINGUISTICS, LIP_READING, LUCK, MAGICAL_SENSE, MAGIC_RESISTANCE, MAGNUM_OPUS, MARKSMAN, MASTER_OF_DISGUISE, MASTER_ORATOR, MASTER_TRADESMAN_APOTHECARY, 
	MASTER_TRADESMAN_POISONER, MASTER_TRADESMAN_ENGINEERING, MENACING, MIMIC, NIGHT_VISION, NIMBLE_FINGERED(DEX, 5), NOBLE_BLOOD, NOSE_FOR_TROUBLE, NUMISMATICS, 
	OLD_SALT, ORIENTATION, PANHANDLE, PERFECT_PITCH, 
	PETTY_MAGIC, 
	PHARMACIST, PILOT, PUBLIC_SPEAKER, PURE_SOUL, RAPID_RELOAD, REACTION_STRIKE, READ_WRITE, RELENTLESS, RESISTANCE_POISON, RESISTANCE_ANY, RESOLUTE, REVERSAL, 
	RIPOSTE, 
	RIVER_GUIDE, ROBUST, ROUGHRIDER, ROVER, SAVANT_APOTHECARY, SAVANT_THEOLOGY, SAVANT_ENGINEERING, SAVANT_LAW, SAVVY(INT, 5), SCALE_SHEER_SURFACE, SCHEMER, 
	SEA_LEGS, SEASONED_TRAVELLER, SECOND_SIGHT, SECRET_IDENTITY, 
	SHADOW, SHARP(I, 5), SHARPSHOOTER, SHIELDSMAN, SIXTH_SENSE, SLAYER, SMALL, SNIPER, SPEEDREADER, SPRINTER, STEP_ASIDE, STONE_SOUP, STOUTHEARTED, 
	STRIDER_TERRAIN, STRIKE_MIGHTY_BLOW, STRIKE_TO_INJURE, STRIKE_TO_STUN, STRONG_BACK, STRONG_LEGS, STRONG_MINDED(WP, 5), STRONG_SWIMMER, STURDY, SUAVE(FEL, 5), 
	SUPER_NUMERATE, SUPPORTIVE, SURE_SHOT, SURGERY, TENACIOUS, TINKER, TOWER_OF_MEMORIES, TRAPPER, TRICK_RIDING, TUNNEL_RAT, UNSHAKEABLE, VERY_RESILIENT(T, 5), 
	VERY_STRONG(S, 5), WAR_LEADER, WAR_WIZARD, WARRIOR_BORN, WATERMAN, WEALTHY, WELL_PREPARED, WITCH;
	
	private Characteristics stat = NONE;
	private int bonus = 0;

	private Talents() {
	}
	
	private Talents(Characteristics stat, int bonus) {
		this.stat = stat;
		this.bonus = bonus;
	}
	
	public Characteristics hasBonus() {
		return stat;
	}
	
	public int bonus() {
		return bonus;
	}
}
